import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
buildscript {
	ext {
		restdocsApiSpecVersion = '0.17.1'
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	// 3. openAPI 플러그인 추가
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
	// 4. swaggerUI 플러그인 추가
	id 'org.hidetake.swagger.generator' version '2.19.2'
}
jacoco {
	toolVersion = "0.8.7"
}

group = 'com.blind'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// swagger ui
//	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'

	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.3-1'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	//Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//spring rest docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//restdocs-api-spec 의존성 추가
	// RestDoc을 OpenApi(Swagger 3.0)의 결과로 만들어주는 오픈소스 라이브러리입니다.
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
		html.required = true

		xml.destination file("${buildDir}/jacoco/index.xml")
		csv.destination file("${buildDir}/jacoco/index.csv")
		html.destination file("${buildDir}/jacoco/index.html")
	}
	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, excludes: [
							'**/*Application*',
							'**/*Exception*',
							'**/dto/**',
							'**/controller/*Stomp*',
							'**/config/**',
							'**/security/**',
							'**/util/**',
							'**/handler/**',
							'**/repository/**',
							'**/common/**'
					])
				})
		)
		executionData.setFrom(fileTree(dir: "${buildDir}/jacoco/test.exec"))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true;
			element = 'CLASS'

			limit {
				counter = 'METHOD'
				value = 'COVEREDRATIO'
				minimum = 0.5
			}

		}

	}
}


// Task 및 설정 추가
// GenerateSwaggerUI 태스크가, openapi3 task 를 의존하도록 설정
tasks.withType(GenerateSwaggerUI) {
	dependsOn 'openapi3'

	//기존 파일 삭제했다가, build 에 출력한 json 정적파일 복사 (안해도 됨 → local 확인용)
	delete file('src/main/resources/static/docs/')
	copy {
		from "build/resources/main/static/docs"
		into "src/main/resources/static/docs/"

	}
}


bootJar{
	dependsOn(':openapi3')
}

openapi3 {
	servers = [
			{url = "http://localhost:8081"},
			{url = "http://blind-dating.site:8081"}
	]
	title = 'Blind-Dating API 문서'
	description = '블라인드 데이팅 API 문서입니다.'
	version = '0.0.1'
	format = 'json'
	outputFileNamePrefix = 'open-api-3.0.1'

	outputDirectory = 'build/resources/main/static/docs'
}







